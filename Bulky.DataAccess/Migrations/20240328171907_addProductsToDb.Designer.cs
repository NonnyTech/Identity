// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nonny.DataAccess.Data;

#nullable disable

namespace Nonny.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240328171907_addProductsToDb")]
    partial class addProductsToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Nonny.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Scifi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("Nonny.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Stanley",
                            ISBN = "23456666",
                            ListPrice = 100.0,
                            Price = 90.0,
                            Price100 = 85.0,
                            Price50 = 80.0,
                            Title = "fortune of time"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Nonny",
                            ISBN = "23456667",
                            ListPrice = 500.0,
                            Price = 490.0,
                            Price100 = 450.0,
                            Price50 = 480.0,
                            Title = "fortune of love"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Rachael",
                            ISBN = "23456661",
                            ListPrice = 1000.0,
                            Price = 1900.0,
                            Price100 = 1750.0,
                            Price50 = 1800.0,
                            Title = "fortune of hatred"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Ikemefuna",
                            ISBN = "33456666",
                            ListPrice = 200.0,
                            Price = 190.0,
                            Price100 = 170.0,
                            Price50 = 180.0,
                            Title = "fortune of money"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
